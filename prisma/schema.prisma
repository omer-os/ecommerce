generator zod {
  provider                 = "zod-prisma"
  output                   = "./zod"
  relationModel            = true 
  modelCase                = "PascalCase"
  modelSuffix              = "Model"
  useDecimalJs             = true 
  prismaJsonNullability    = true 
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Store {
  id          String    @id @default(cuid())
  name        String
  description String?
  logoUrl    String?
  address     String?
  phone       String?
  email       String?
  website     String?
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String    @id @default(cuid()) /// @zod.optional()
  name        String
  description String?
  Product     Product[]
  imageUrl    String?
}

model Product {
  id          String   @id @default(cuid()) /// @zod.optional()
  name        String
  description String?
  price       Float   @default(0) 
  image       String?
  categoryId  String
  Category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
}
